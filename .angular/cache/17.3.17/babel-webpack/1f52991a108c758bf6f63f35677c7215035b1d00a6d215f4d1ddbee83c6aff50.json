{"ast":null,"code":"import { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CoursesService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:5051/api/courses';\n  }\n  getCourses() {\n    return this.http.get(this.apiUrl).pipe(map(response => response.courses));\n  }\n  static {\n    this.ɵfac = function CoursesService_Factory(t) {\n      return new (t || CoursesService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: CoursesService,\n      factory: CoursesService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["map","CoursesService","constructor","http","apiUrl","getCourses","get","pipe","response","courses","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["D:\\PROJECTS\\DEV\\PortfolioApi\\portfolio-client\\src\\app\\services\\courses.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nexport interface CourseDto {\r\n    courses: string[];\r\n}\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class CoursesService {\r\n    private apiUrl = 'http://localhost:5051/api/courses';\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    getCourses(): Observable<string[]> {\r\n        return this.http.get<CourseDto>(this.apiUrl)\r\n        .pipe(\r\n            map(response => response.courses)\r\n        );\r\n    }\r\n}\r\n"],"mappings":"AAGA,SAASA,GAAG,QAAQ,gBAAgB;;;AASpC,OAAM,MAAOC,cAAc;EAGvBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,mCAAmC;EAEZ;EAExCC,UAAUA,CAAA;IACN,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAY,IAAI,CAACF,MAAM,CAAC,CAC3CG,IAAI,CACDP,GAAG,CAACQ,QAAQ,IAAIA,QAAQ,CAACC,OAAO,CAAC,CACpC;EACL;;;uBAVSR,cAAc,EAAAS,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAdZ,cAAc;MAAAa,OAAA,EAAdb,cAAc,CAAAc,IAAA;MAAAC,UAAA,EAFX;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}