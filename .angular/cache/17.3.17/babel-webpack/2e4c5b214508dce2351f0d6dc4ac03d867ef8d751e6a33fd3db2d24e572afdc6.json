{"ast":null,"code":"import { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ContactService {\n  constructor(http) {\n    this.http = http;\n  }\n  static {\n    this.ɵfac = function ContactService_Factory(t) {\n      return new (t || ContactService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: ContactService,\n      factory: ContactService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\nexport class CoursesService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:5051/api/courses'; // Sprawdź czy backend działa na tym porcie\n  }\n  getCourses() {\n    return this.http.get(this.apiUrl).pipe(map(response => response.courses));\n  }\n  static {\n    this.ɵfac = function CoursesService_Factory(t) {\n      return new (t || CoursesService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: CoursesService,\n      factory: CoursesService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["map","ContactService","constructor","http","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn","CoursesService","apiUrl","getCourses","get","pipe","response","courses"],"sources":["D:\\PROJECTS\\DEV\\PortfolioApi\\portfolio-client\\src\\app\\services\\contact.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nexport interface ContactForm {\n  name: string;\n  email: string;\n  message: string;\n}\n\nexport interface CourseDto {\n  courses: string[];\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ContactService {\n  constructor(private http: HttpClient) { }\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CoursesService {\n  private apiUrl = 'http://localhost:5051/api/courses'; // Sprawdź czy backend działa na tym porcie\n\n  constructor(private http: HttpClient) { }\n\n  getCourses(): Observable<string[]> {\n    return this.http.get<CourseDto>(this.apiUrl).pipe(\n      map(response => response.courses)\n    );\n  }\n}"],"mappings":"AAGA,SAASA,GAAG,QAAQ,gBAAgB;;;AAepC,OAAM,MAAOC,cAAc;EACzBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAgB;;;uBAD7BF,cAAc,EAAAG,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAdN,cAAc;MAAAO,OAAA,EAAdP,cAAc,CAAAQ,IAAA;MAAAC,UAAA,EAFb;IAAM;EAAA;;AASpB,OAAM,MAAOC,cAAc;EAGzBT,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAS,MAAM,GAAG,mCAAmC,CAAC,CAAC;EAEd;EAExCC,UAAUA,CAAA;IACR,OAAO,IAAI,CAACV,IAAI,CAACW,GAAG,CAAY,IAAI,CAACF,MAAM,CAAC,CAACG,IAAI,CAC/Cf,GAAG,CAACgB,QAAQ,IAAIA,QAAQ,CAACC,OAAO,CAAC,CAClC;EACH;;;uBATWN,cAAc,EAAAP,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAdI,cAAc;MAAAH,OAAA,EAAdG,cAAc,CAAAF,IAAA;MAAAC,UAAA,EAFb;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}